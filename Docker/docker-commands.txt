

	######################################
	##									                ##
	## Docker Comands Tricks and Tracks ##
	##									                ##
	######################################
	
# Run docker in deatach mode
docker run -d [docker_image]

# Exec bash into a container and exit without stop
docker exec -it [container] bash

# Exec bash into a container as root
docker exec -it [container] bash
	
# Inspect container ip
docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' container_name_or_id

# Overwrite entripoint 
docker run -it --entrypoint "/bin/sh" [image]

# Build
docker build --tab=image name .

# Exit docker without stop
Ctrl+p, Ctrl+q 

# Obtain Docker IP 
docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' [containers]

# Run Metasploitable docker
sudo  docker run --rm -it -p 443:443 -v ~/.msf4:/root/.msf4 -v /tmp/msf:/tmp/data remnux/metasploit

  ## With Database using docker-compose
  - Download docker-compose from: https://github.com/rapid7/metasploit-framework/blob/master/docker-compose.yml
  - Run as: 
      > docker-compose run --rm --service-ports -e MSF_UID=$(id -u) -e MSF_GID=$(id -g) ms

# Run Empire
docker run -it -p 80:80 -p 443:443 -v /home/$USER/mydir:/data bcsecurity/empire:v3.6.3

# Jenkins Container
docker run -p 8080:8080 -p 50000:50000 -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts
  
  ## Jenkins image documentation
  https://github.com/jenkinsci/docker

# Aquatone
https://blog.smallsec.ca/dockerizing-cli-tools/

## Run Mobsf on docker
https://mobsf.github.io/docs/#/docker

## Run ReconFTW on docker
docker run -v $PWD/reconftw.cfg:/root/Tools/reconftw/reconftw.cfg -v $PWD/Recon/:/root/Tools/reconftw/Recon/ --name recon_name --rm reconftw -d domain -a --deep

## Run OpenVas
docker run -d -p 443:443 --name openvas mikesplain/openvas

## Run John The ripper
docker run -it --entrypoint bash adamoss/john-the-ripper

# Logs
docker logs [container-id]
docker logs --follow [container-id]	

# Volumenes montados
docker volume ls

## Eliminar eliminados que no se utilizan
docker volume prune

# Exec shell inside a running container
docker exec -it [container-id] /bin/bash

# Netowrks
docker network ls
docker network inspect [network-name]

# Commit changes from container to image
docker commit [container] [images]

# Export container to tarfile 
docker export --output="name.tar" [image]

# Import contaienr from tar file
docker import /path/to/name.tgz

# Export image to tarfile 
docker save --output="name.tar" [image]

## Load from tar file !recomended!
docker load --input [image.tar]

## Raspberry Pi architecture images
docker run -ti armhf/alpine:3.5 /bin/sh

# Copy files from contaienr
docker cp <containerId>:/file/path/within/container /host/path/target

# Copy from contaienr to host
docker cp /host/path/target <containerId>:/file/path/within/container

# Tag image
docker tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]

# Most como docker run commands
docker run \ 
  --rm \ 
  --detach \ 
  --env KEY=VALUE \
  --ip 10.10.9.75 \
  --publish 3000:3000 \
  --volume my_volume \
  --name my_container \
  --tty --interactive \
  --volume /my_volume \
  --workdir /app \ 
  IMAGE bash

# Delete all images
docker rmi $(docker images --format "{{.ID}}")

# Delete all pause container
docker rm $(docker ps -a --format "{{.ID}}")
 
 -----------------------------------------
 
Command 				Description
docker attach 		Attach local standard input, output, and error streams to a running container
docker build 		Build an image from a Dockerfile
docker builder 		Manage builds
docker checkpoint 	Manage checkpoints
docker commit 		Create a new image from a container’s changes
docker config 		Manage Docker configs
docker container 	Manage containers
docker cp 			Copy files/folders between a container and the local filesystem
docker create 		Create a new container
docker deploy 		Deploy a new stack or update an existing stack
docker diff 		Inspect changes to files or directories on a container’s filesystem
docker engine 		Manage the docker engine
docker events 		Get real time events from the server
docker exec 		Run a command in a running container
docker export 		Export a container’s filesystem as a tar archive
docker history 		Show the history of an image
docker image 		Manage images
docker images 		List images
docker import 		Import the contents from a tarball to create a filesystem image
docker info 		Display system-wide information
docker inspect 		Return low-level information on Docker objects
docker kill 		Kill one or more running containers
docker load 		Load an image from a tar archive or STDIN
docker login 		Log in to a Docker registry
docker logout 		Log out from a Docker registry
docker logs 		Fetch the logs of a container
docker manifest 	Manage Docker image manifests and manifest lists
docker network 		Manage networks
docker node 		Manage Swarm nodes
docker pause 		Pause all processes within one or more containers
docker plugin 		Manage plugins
docker port 		List port mappings or a specific mapping for the container
docker ps 			List containers
docker pull 		Pull an image or a repository from a registry
docker push 		Push an image or a repository to a registry
docker rename 		Rename a container
docker restart 		Restart one or more containers
docker rm 			Remove one or more containers
docker rmi 			Remove one or more images
docker run 			Run a command in a new container
docker save 		Save one or more images to a tar archive (streamed to STDOUT by default)
docker search 		Search the Docker Hub for images
docker secret 		Manage Docker secrets
docker service 		Manage services
docker stack 		Manage Docker stacks
docker start 		Start one or more stopped containers
docker stats 		Display a live stream of container(s) resource usage statistics
docker stop 		Stop one or more running containers
docker swarm 		Manage Swarm
docker system 		Manage Docker
docker tag 			Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
docker top 			Display the running processes of a container
docker trust 		Manage trust on Docker images
docker unpause 		Unpause all processes within one or more containers
docker update 		Update configuration of one or more containers
docker version 		Show the Docker version information
docker volume 		Manage volumes
docker wait 		Block until one or more containers stop, then print their exit codes