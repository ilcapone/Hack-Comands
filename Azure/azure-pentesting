
	## Documentation
	https://cloud.hacktricks.xyz/pentesting-cloud/pentesting-cloud-methodology#cloudfox
	https://hausec.com/2020/01/31/attacking-azure-azure-ad-and-introducing-powerzure/

		## Tactics
		https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Cloud%20-%20Azure%20Pentest.md

	## Awesome pentesting tools
	https://github.com/Kyuu-Ji/Awesome-Azure-Pentest
	https://github.com/NetSPI/MicroBurst
	https://github.com/nccgroup/azucar
	https://github.com/hausec/PowerZure
	https://github.com/silverhack/monkey365

		## AzureHound - BloodHound for azure
		https://github.com/BloodHoundAD/AzureHound
		https://infosecwriteups.com/securing-azure-hunting-with-azurehound-d7ebb58e0fde

			## Two factor
			https://bloodhound.readthedocs.io/en/latest/data-collection/azurehound.html#dealing-with-multi-factor-auth-and-conditional-access-policies

	## Active Dyrectory in Azure
	https://github.com/Cloud-Architekt/AzureAD-Attack-Defense

	## Compilation of tools and tactics
	https://github.com/CyberSecurityUP/Cloud-Security-Attacks

	## Roles For do a pentest
		- All Roles > https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles
		- Reader Role > https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles#reader
		- Attack Simulation Administrato > https://learn.microsoft.com/en-us/azure/active-directory/roles/permissions-reference#attack-simulation-administrator

	### Cloud Fox Azure
	https://github.com/BishopFox/cloudfox#azure-commands

	## Two factor CLI auth

		## Documentation
		https://infosecwriteups.com/securing-azure-hunting-with-azurehound-d7ebb58e0fde

		# Primero tal cual ejecutar:
		```
		$body = @{
		    "client_id" =     "1950a258-227b-4e31-a9cf-717495945fc2"
		    "resource" =      "https://graph.microsoft.com"
		}
		$UserAgent = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36"
		$Headers=@{}
		$Headers["User-Agent"] = $UserAgent
		$authResponse = Invoke-RestMethod `
		    -UseBasicParsing `
		    -Method Post `
		    -Uri "https://login.microsoftonline.com/common/oauth2/devicecode?api-version=1.0" `
		    -Headers $Headers `
		    -Body $body
		$authResponse
		```

		## Acceder a 
		https://microsoft.com/devicelogin

		## Finalizar ejecutando tal cual
		```
		$body=@{
		    "client_id" =  "1950a258-227b-4e31-a9cf-717495945fc2"
		    "grant_type" = "urn:ietf:params:oauth:grant-type:device_code"
		    "code" =       $authResponse.device_code
		}
		$Tokens = Invoke-RestMethod `
		    -UseBasicParsing `
		    -Method Post `
		    -Uri "https://login.microsoftonline.com/Common/oauth2/token?api-version=1.0" `
		    -Headers $Headers `
		    -Body $body
		$Tokens
		```

	## Powerzure

		## View Powerzure comands
		PowerZure -h
		Invoke-Powerzure -h

		## Connect
		Connect-AzAccount

		## Check Conexion reviewing user data
		Get-AzureCurrentUser

		## Get al Secrets that user has acces from Vault
		Get-AllKeyVaultContents
